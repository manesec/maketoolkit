from importlib.machinery import SourceFileLoader
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Privilege Escalation, Linux Security, Vulnerability Assessment

LES (Linux Exploit Suggester) is a tool for auditing Linux systems to identify potential privilege escalation vulnerabilities based on the kernel version. It assesses exposure to known exploits and verifies kernel hardening settings, helping security professionals enhance system defenses.

- Detects known Linux kernel vulnerabilities
- Assesses kernel exposure to exploits
- Checks security configurations and settings
- Provides detailed exploit information and remediation links
- Supports customization for various distributions and kernel versions
"""
    print(desc)

def Install():
    print("[linux-exploit-suggester] Install ...")
    GithubProject()

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Linux/LES.sh")):
        import sys
        module_name = "Linux/LES.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")

def Uninstall():
    print("[linux-exploit-suggester] Uninstall ...")
    
    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Linux/LES.sh")

def Upgrade():
    print("[linux-exploit-suggester] Upgrade ...")
    GithubProject()

def GithubProject():
    file = [
        ["linux-exploit-suggester.sh","/var/lib/mkt/Tools/Source/Linux/LES.sh"]
    ]
    Github.ProjectGetFilesAndUpdate("mzet-/linux-exploit-suggester","master",file) 
    Github.CheckGithubAPIQuta()   
