
from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Username Generation, Active Directory, Security Tools, Automation

AD-Username-Generator creates usernames based on Active Directory naming conventions, ensuring consistency and adherence to organizational standards.

- Generates usernames in various formats.
- Supports complete names and initials.
- Customizable to fit specific naming conventions.
- Ensures unique username creation.
- Can be integrated into scripts for automation.
- User-friendly interface for quick generation.
- Saves time in user account setup.
- Reduces human error in username creation.
- Generates usernames in bulk.
- Useful for IT administrators and security professionals.


"""
    print(desc)
    
def Install():
    print("[ADUsernameGenerator] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists/")
    os.system("git clone https://github.com/mohinparamasivam/AD-Username-Generator.git ADUsernameGenerator")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Wordlists/ADUsernameGenerator/README.md")):
        import sys
        module_name = "Wordlists/ADUsernameGenerator.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[ADUsernameGenerator] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Wordlists/ADUsernameGenerator")

def Upgrade():
    print("[ADUsernameGenerator] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists/ADUsernameGenerator")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))