from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Username Generation, Security Testing, Password Attacks, Penetration Testing

Statistically Likely Usernames is a resource designed for security professionals to create probable username lists for efficient enumeration and password-guessing attacks. By leveraging popular naming conventions and formats, it enhances the success rate of attacks while minimizing account lockout risks.

- Generates usernames based on statistical likelihood
- Utilizes data from US Census and Facebook
- Supports horizontal password attacks
- Provides various pre-canned username formats
- Allows customization and manipulation of base lists
- Includes email address variations
- Tested extensively in live penetration tests
- Aids in efficient guessing strategies
- Reduces time spent on less likely usernames
- Helps identify common username patterns
"""
    print(desc)

def Install():
    print("[StatisticallyLikelyUsernames] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists")
    os.system("git clone https://github.com/insidetrust/statistically-likely-usernames.git StatisticallyLikelyUsernames")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Wordlists/StatisticallyLikelyUsernames/README.md")):
        import sys
        module_name = "Wordlists/StatisticallyLikelyUsernames.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[StatisticallyLikelyUsernames] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Wordlists/StatisticallyLikelyUsernames")

def Upgrade():
    print("[StatisticallyLikelyUsernames] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists/StatisticallyLikelyUsernames")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    