from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()


def description():
    desc = r"""
Categories: Web Pentesting, Fuzzing, Security Testing, Dictionary Attacks

fuzzDicts is a comprehensive collection of fuzzing dictionaries designed for web penetration testing. It includes various payloads and keywords useful for identifying vulnerabilities in web applications, making it an essential tool for security professionals.

- Extensive collection of fuzzing dictionaries for diverse attack vectors
- Regularly updated with new payloads and entries
- Includes specialized dictionaries for SQL, XSS, SSRF, and more
- User-contributed updates and suggestions encouraged
- Supports various frameworks and CMS like WordPress and ThinkPHP
- Contains a dedicated password dictionary for weak passwords
- Offers a user name dictionary for reconnaissance
- Provides API and router backend dictionaries
- Easy integration with popular pentesting tools like Burp Suite and SQLMap
- Accessible through GitHub for easy updates and collaboration
"""
    print(desc)

def Install():
    print("[FuzzDicts] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists")
    os.system("git clone https://github.com/TheKingOfDuck/fuzzDicts.git FuzzDicts")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Wordlists/FuzzDicts/README.md")):
        import sys
        module_name = "Wordlists/FuzzDicts.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[FuzzDicts] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Wordlists/FuzzDicts")

def Upgrade():
    print("[FuzzDicts] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists/FuzzDicts")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    