from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Web Security, Pentesting, Bug Bounty, API Discovery, Infrastructure Scanning

A curated collection of targeted paths linked to major web frameworks and infrastructure, designed for rapid web-content discovery. Ideal for pentesters and security engineers seeking quick wins through high-quality wordlists.

- Focuses on known misconfigurations and sensitive data leaks.
- Identifies hidden API endpoints and verbose server data.
- Prioritizes modern tech stacks for better results.
- Supports contributions to enhance the wordlist.
- Short and focused for efficient scanning.
- Useful for bug bounty hunters across multiple subdomains.
- Aims to streamline the assessment process.
- Avoids CVEs, emphasizing practical paths instead.
- Complements larger wordlists from Assetnote and SecLists.
- Provides a community-driven resource for security professionals.
"""
    print(desc)

def Install():
    print("[LeakyPaths] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists")
    os.system("git clone https://github.com/ayoubfathi/leaky-paths.git LeakyPaths")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Wordlists/LeakyPaths/README.md")):
        import sys
        module_name = "Wordlists/LeakyPaths.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[LeakyPaths] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Wordlists/LeakyPaths")

def Upgrade():
    print("[LeakyPaths] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Wordlists/LeakyPaths")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    