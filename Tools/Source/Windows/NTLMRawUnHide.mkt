from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Network Analysis, Hash Extraction, Penetration Testing

NTLMRawUnhide.py is a Python3 script that extracts NTLMv2 hashes from network packet capture files, enabling hackers to crack NTLM authentication without conversion. It supports various capture formats and can continuously monitor files for new data.

- Developed by Mike Gualtieri
- Parses various packet capture formats: .pcap, .pcapng, .cap, .etl
- Extracts NTLMv2 hashes efficiently
- Supports continuous monitoring of input files
- Can output results to a specified file
- Offers verbose and quiet modes for output control
- Compatible with tools like Wireshark and tcpdump
- Useful for live-off-the-land attacks
- Enhances penetration testing capabilities
- Open-source and available on GitHub
"""
    print(desc)

def Install():
    print("[NTLMRawUnHide] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/mlgualtieri/NTLMRawUnHide.git NTLMRawUnHide")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/NTLMRawUnHide/README.md")):
        import sys
        module_name = "Windows/NTLMRawUnHide.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  


def Uninstall():
    print("[NTLMRawUnHide] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/NTLMRawUnHide")

def Upgrade():
    print("[NTLMRawUnHide] Upgrade ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/NTLMRawUnHide")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
