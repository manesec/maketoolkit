from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Penetration Testing, Red Teaming, Phishing, Hash Theft

ntlm_theft is an open-source Python3 tool designed to generate various NTLMv2 hash theft files for phishing attacks. It utilizes legitimate file functionalities to bypass security measures, making it effective for internal and external phishing attempts.

- Generates 21 different hash theft file types
- Bypasses Windows Defender Antivirus (as of June 2020)
- Supports multiple attack vectors (e.g., .url, .docx, .xlsx)
- Ideal for penetration testers and red teamers
- Allows mass testing of antivirus and email gateways
- Easy to use with simple command-line parameters
- Facilitates targeted phishing by department (HR, Finance)
- Requires Python3 and xlsxwriter
- Supports both internal and external network attacks
- Open-source with active community contributions
"""
    print(desc)

def Install():
    print("[NtlmTheft] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("pip3 install xlsxwriter")
    os.system("git clone https://github.com/Greenwolf/ntlm_theft.git NtlmTheft")


    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/NtlmTheft/README.md")):
        import sys
        module_name = "Windows/NtlmTheft.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[NtlmTheft] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/NtlmTheft")

def Upgrade():
    print("[NtlmTheft] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/NtlmTheft")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))