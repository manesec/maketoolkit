from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()

def description():
    desc = r"""
Categories: Password Cracking, Active Directory, Kerberos, Enumeration

Kerbrute is a powerful tool for bruteforcing and enumerating valid Active Directory accounts via Kerberos Pre-Authentication. It allows for stealthy attacks by leveraging the Kerberos protocol, making it faster and less detectable than traditional methods.

- Supports multiple commands: bruteforce, bruteuser, passwordspray, userenum
- Multithreaded for quick execution (default 10 threads)
- Safe mode to prevent account lockouts
- Logs output to stdout or a specified file
- Can test usernames without triggering login failures
- Uses UDP for stealthier attacks
- Requires domain and domain controller specification
- Allows for custom delays between attempts
- Supports reading from stdin or files for username/password combos
- Designed for internal use on Windows domains
"""
    print(desc)
    
def Install():
    print("[Kerbrute] Downloading base ...")

    from pathlib import Path
    path = Path("/var/lib/mkt/Tools/Source/Windows/Kerbrute")
    path.mkdir(parents=True, exist_ok=True)

    UpdateFromGithub()

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Kerbrute")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Kerbrute/kerbrute_linux_amd64")):
        import sys
        module_name = "Windows/Kerbrute.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")


def Uninstall():
    import os
    print("[Kerbrute] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Kerbrute")
    os.system("rm -rf /var/lib/mkt/Tools/Version/kerbrute_*")
    

def Upgrade():
    print("[Kerbrute] Upgrading ...")
    UpdateFromGithub()
    
def UpdateFromGithub():
    Files = [
        ["kerbrute_linux_amd64","/var/lib/mkt/Tools/Source/Windows/Kerbrute/kerbrute_linux_amd64"],
    ]
    Github.UpdateFromGithubReleaseFiles("ropnop/kerbrute",Files,sign_prefix="kerbrute_")
    Github.CheckGithubAPIQuta()