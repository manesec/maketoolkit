from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Reverse Shell, Networking, Windows, C/C++, Python

This tool is a customizable reverse shell that allows remote command execution. It features adjustable beacon intervals and a timeout mechanism to prevent runaway processes. Designed for both Windows and Kali Linux, it supports multiple enhancements for system enumeration and file transfers.

- Customizable IP and port settings
- Supports both Windows and Linux environments
- Beacon interval and timeout settings
- Easy compilation with makefile or g++
- Python receiver setup for handling connections
- Future enhancements for multiple reverse shells
- Options for system enumeration and file management
- Minimal dependencies required
- Debugging features for easy development
- Ideal for penetration testing and CTF challenges

"""
    print(desc)

def Install():
    print("[Rev] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/thosearetheguise/rev.git Rev")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Rev/README.md")):
        import sys
        module_name = "Windows/Rev.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")      

def Uninstall():
    print("[Rev] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Rev")

def Upgrade():
    print("[Rev] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Rev")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))