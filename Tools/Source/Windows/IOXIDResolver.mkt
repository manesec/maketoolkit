from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Network Enumeration, DCOM, Security Research, Vulnerability Assessment

IOXIDResolver is a Python tool that allows hackers to remotely enumerate network interfaces without authentication. It identifies additional active interfaces, which can indicate virtual machines, VPNs, or other interesting network configurations.

- Remote enumeration of network interfaces
- No authentication required
- Identifies virtual machines and VPNs
- Useful for security assessments
- Supports DCOM protocol
- Helps in network mapping
- Assists in identifying potential attack vectors
- Simple command-line interface
- Developed by Airbus Security
- Open-source research tool

"""
    print(desc)
    
def Install():
    print("[IOXIDResolver] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/mubix/IOXIDResolver.git IOXIDResolver")
    os.chdir("/var/lib/mkt/Tools/Source/Windows/IOXIDResolver")
    os.system("pip3 install -r requirements.txt")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/IOXIDResolver/README.md")):
        import sys
        module_name = "Windows/IOXIDResolver.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  


def Uninstall():
    print("[IOXIDResolver] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/IOXIDResolver")

def Upgrade():
    print("[IOXIDResolver] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/IOXIDResolver")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    os.system("pip3 install -r requirements.txt")
