from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Windows Binaries, Packaging, Kali Linux, Cross-Platform Tools

This tool facilitates the packaging of Windows binaries for use on Kali Linux, enabling security professionals to run and test Windows applications in a Linux environment seamlessly.

- Supports various Windows binary formats
- Simplifies the installation process on Kali Linux
- Maintains compatibility with Windows dependencies
- Streamlines testing for security vulnerabilities
- Provides a user-friendly interface
- Automates the packaging process
- Offers command-line tools for advanced users
- Integrates with existing Kali tools
- Regular updates for compatibility
- Community support and documentation available
"""
    print(desc)
    
def Install():
    print("[KaliWinBinary] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://gitlab.com/kalilinux/packages/windows-binaries.git KaliWinBinary")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/KaliWinBinary/nc.exe")):
        import sys
        module_name = "Windows/KaliWinBinary.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  


def Uninstall():
    print("[KaliWinBinary] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/KaliWinBinary")

def Upgrade():
    print("[KaliWinBinary] Upgrade ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/KaliWinBinary")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
