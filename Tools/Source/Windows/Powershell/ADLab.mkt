from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Penetration Testing, Active Directory, Network Configuration, Security Assessment

The AD Penetration Testing Lab script automates the setup of a Domain Controller and Workstations for security testing, enabling quick configuration of essential services and policies.

- Configures machine name and static IP for Domain Controller
- Installs Active Directory Domain Services role
- Sets up network shares for collaboration
- Creates Group Policies to disable Windows Defender
- Facilitates user account creation on Domain Controller
- Configures DNS settings for Workstations
- Joins Workstations to the Domain
- Streamlines penetration testing setup
- Enhances security assessment efficiency
- Supports Active Directory exploitation training
"""
    print(desc)
    
def Install():
    print("[ADLab] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/browninfosecguy/ADLab.git ADLab")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/ADLab/README.md")):
        import sys
        module_name = "Windows/Powershell/ADLab.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    


def Uninstall():
    print("[ADLab] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/ADLab")

def Upgrade():
    print("[ADLab] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/ADLab")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    