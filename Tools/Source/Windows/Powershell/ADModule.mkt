from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Active Directory, PowerShell, Enumeration, Hacking Tools

ADModule is a Microsoft-signed DLL that allows users to interact with Active Directory through PowerShell without needing RSAT or administrative rights. It enables enumeration of AD objects while maintaining a low detection profile.

- Microsoft-signed DLL for authenticity
- Enables Active Directory enumeration
- No need for RSAT installation
- Works without administrative privileges
- Low detection by antivirus software
- Wide coverage of cmdlets for various tasks
- Supports PowerShell's Constrained Language Mode
- Easy to import and use in scripts
- Can be executed directly from the web
- Useful for penetration testing and security assessments
"""
    print(desc)
    
def Install():
    print("[ADModule] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/samratashok/ADModule.git ADModule")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/ADModule/README.md")):
        import sys
        module_name = "Windows/Powershell/ADModule.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    

def Uninstall():
    print("[ADModule] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/ADModule")

def Upgrade():
    print("[ADModule] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/ADModule")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    