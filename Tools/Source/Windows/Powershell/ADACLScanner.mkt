from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Active Directory, Security, Reporting, Forensics

AD ACL Scanner is a PowerShell tool designed for auditing and reporting on access control lists (DACLs) and system access control lists (SACLs) within Active Directory. It provides both CLI and GUI interfaces for detailed analysis and reporting of permissions.

- Scan linked Group Policy Objects for permission issues.
- Generate HTML and CSV reports of DACLs/SACLs.
- Filter permissions by access type or specific identities.
- Compare current and previous permission configurations.
- Export reports without needing Excel installed.
- Display effective rights for specific security principals.
- Skip default permissions to focus on custom settings.
- View and manage permissions across different domains.
- Support for custom search filters and input from pipeline.
- Report on permission modifications and inheritance settings.
"""
    print(desc)

def Install():
    print("[ADACLScanner] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/canix1/ADACLScanner.git ADACLScanner")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/ADACLScanner/README.md")):
        import sys
        module_name = "Windows/Powershell/ADACLScanner.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    

def Uninstall():
    print("[ADACLScanner] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/ADACLScanner")

def Upgrade():
    print("[ADACLScanner] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/ADACLScanner")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    