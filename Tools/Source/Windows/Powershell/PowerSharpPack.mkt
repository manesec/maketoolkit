from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Offensive Security, PowerShell, C#, Post-Exploitation, Privilege Escalation

PowerSharpPack is a versatile toolkit that integrates various offensive C# projects into PowerShell for streamlined usage. It enables users to bypass security mechanisms like AMSI and Script-block logging, making advanced security testing more accessible.

- Combines multiple C# offensive tools into PowerShell
- Bypasses common security features like AMSI
- Easy binary loading via PowerShell commands
- Supports a wide range of offensive security tasks
- Facilitates privilege escalation and credential harvesting
- Includes tools for Active Directory enumeration
- Allows for remote code execution and lateral movement
- Provides persistence mechanisms
- Offers tools for data extraction from browsers and applications
- Regularly updated with community contributions
"""
    print(desc)

def Install():
    print("[PowerSharpPack] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/S3cur3Th1sSh1t/PowerSharpPack.git PowerSharpPack")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/PowerSharpPack/README.md")):
        import sys
        module_name = "Windows/Powershell/PowerSharpPack.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    

def Uninstall():
    print("[PowerSharpPack] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/PowerSharpPack")

def Upgrade():
    print("[PowerSharpPack] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/PowerSharpPack")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    