from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()


def description():
    desc = r"""
Categories: Active Directory, Penetration Testing, Security Training

BadBlood by Secframe simulates a realistic Microsoft Active Directory environment, generating a unique domain structure with thousands of objects each time it runs. This tool is designed for security analysts to practice and enhance their skills in securing Active Directory.

- Generates a unique AD environment with every run
- Useful for training security analysts and engineers
- Supports various testing scenarios
- Requires Domain Admin and Schema Admin permissions
- Outputs realistic users, groups, and permissions
- Ideal for practicing security tools and techniques
- Facilitates understanding of Active Directory security
- No cleanup responsibility in production domains
- Open-source and licensed under GPLv3
- Disclaimer: Use at your own risk
"""
    print(desc)

def Install():
    print("[BadBlood] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/davidprowe/BadBlood.git BadBlood")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/BadBlood/README.md")):
        import sys
        module_name = "Windows/Powershell/BadBlood.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    

def Uninstall():
    print("[BadBlood] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/BadBlood")

def Upgrade():
    print("[BadBlood] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/BadBlood")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    