from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Reverse Shell, Windows, Interactive Shell, Hacking Tools

ConPtyShell is a fully interactive reverse shell designed for Windows systems, leveraging the Pseudo Console (ConPty) feature to create a seamless remote PowerShell experience. It enables real-time interaction through two asynchronous threads for input/output handling.

- Fully interactive reverse shell for Windows
- Utilizes Windows Pseudo Console (ConPty)
- Transforms bash into remote PowerShell
- Supports upgrading existing shells
- Requires Windows 10 / Server 2019 or newer
- Asynchronous I/O for efficient communication
- Simple setup with netcat as a listener
- Maintains aligned output with terminal size
- Allows manual configuration of terminal dimensions
- Provides a demo for practical understanding
"""
    print(desc)

def Install():
    print("[ConPtyShell] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/antonioCoco/ConPtyShell.git ConPtyShell")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/ConPtyShell/README.md")):
        import sys
        module_name = "Windows/Powershell/ConPtyShell.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")        

def Uninstall():
    print("[ConPtyShell] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/ConPtyShell")

def Upgrade():
    print("[ConPtyShell] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/ConPtyShell")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    