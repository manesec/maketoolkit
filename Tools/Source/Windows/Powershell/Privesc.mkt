from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Windows, PowerShell, Privilege Escalation, Security Auditing

Invoke-Privesc is a PowerShell script designed to identify misconfiguration issues in Windows systems that may allow for privilege escalation. It checks user permissions, ACLs, and various system configurations to highlight potential vulnerabilities.

- Scans for misconfigured ACLs
- Checks user privileges and permissions
- Identifies sensitive files that may contain passwords
- Reports on installed software and services
- Analyzes scheduled tasks for vulnerabilities
- Examines registry settings for security risks
- Outputs results in a user-friendly format
- Supports extended and long output options
- Provides information on system patches
- Assists in identifying potential attack vectors
"""
    print(desc)

def Install():
    print("[Privesc] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell")
    os.system("git clone https://github.com/enjoiz/Privesc.git Privesc")
        
    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Powershell/Privesc/README.md")):
        import sys
        module_name = "Windows/Powershell/Privesc.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    

def Uninstall():
    print("[Privesc] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Powershell/Privesc")

def Upgrade():
    print("[Privesc] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Powershell/Privesc")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    