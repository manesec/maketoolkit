from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Exploitation, Credential Manipulation, Active Directory, Python Tools

pyWhisker is a Python tool designed for manipulating the msDS-KeyCredentialLink attribute in Active Directory, allowing attackers to gain control over user and computer accounts. It supports various authentication methods and enables actions like adding, removing, and listing KeyCredentials, facilitating advanced exploitation techniques.

- Manipulates msDS-KeyCredentialLink for account takeover
- Supports multiple authentication methods (NTLM, Kerberos)
- Actions include list, add, remove, spray, clear, and export
- Requires Windows Server 2016 or above for target domain
- Can perform cross-domain operations
- Utilizes Impacket for underlying functionality
- Generates RSA keys and X.509 certificates
- Exports/imports KeyCredentials in JSON format
- Multi-level verbosity for detailed output
- Facilitates "Shadow Credentials" attacks

"""
    print(desc)

def Install():
    print("[PyWhisker] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/ShutdownRepo/pywhisker PyWhisker")
    os.chdir("/var/lib/mkt/Tools/Source/Windows/PyWhisker/")
    os.system("pip3 install -r requirements.txt")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/PyWhisker/README.md")):
        import sys
        module_name = "Windows/PyWhisker.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")      

def Uninstall():
    print("[PyWhisker] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/PyWhisker")

def Upgrade():
    print("[PyWhisker] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/PyWhisker")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))