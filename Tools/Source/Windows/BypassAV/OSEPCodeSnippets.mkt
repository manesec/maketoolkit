from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Code Injection, Lateral Movement, Bypass Techniques, Shellcode Encoding, Process Hollowing

The OSEP Code Snippets provide a collection of utilities and techniques for bypassing security measures and executing payloads in various environments. These snippets are designed for educational purposes in offensive security.

- AppLocker Bypass PowerShell Runspace (C#)
- Fileless Lateral Movement (C#)
- Linux Shellcode Encoder (Python)
- Linux Shellcode Loaders (C)
- MiniDump (C# & PS1)
- MSSQL (C#)
- PrintSpoofer.NET (C#)
- ROT Shellcode Encoder (C#)
- Sections Shellcode Process Injector (C#)
- Shellcode Process Hollowing (C#)
- Shellcode Process Injector (C# & PS1)
- Simple Shellcode Runner (C# & PS1 & VBA)
- XOR Shellcode Encoder (C#)
"""
    print(desc)

def Install():
    print("[OSEPCodeSnippets] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/BypassAV")
    os.system("git clone https://github.com/chvancooten/OSEP-Code-Snippets OSEPCodeSnippets")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/BypassAV/OSEPCodeSnippets/README.md")):
        import sys
        module_name = "Windows/BypassAV/OSEPCodeSnippets.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[OSEPCodeSnippets] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/BypassAV/OSEPCodeSnippets")

def Upgrade():
    print("[OSEPCodeSnippets] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/BypassAV/OSEPCodeSnippets")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))