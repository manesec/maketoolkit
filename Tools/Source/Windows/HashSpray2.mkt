from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Kerberos, PassTheHash, Active Directory, Authentication, Spraying Tools

HashSpray2.py is a powerful toolkit designed for executing Kerberos AS-REQ spraying attacks against known users in Active Directory environments. It leverages NTLM hashes and supports multiple authentication methods, making it essential for penetration testers and security researchers.

- Built on impacket library for robust networking capabilities
- Supports user and hash input from files
- Allows targeting of specific domains and domain controllers
- Configurable threading for performance optimization
- Enables clear-text password usage for authentication
- Facilitates NTLM hash spraying for credential harvesting
- Offers detailed logging for monitoring attempts
- Can be tailored for local and remote user spraying
- Provides options for AES key utilization in Kerberos
- User-friendly command-line interface for efficient operation

"""
    print(desc)
    
def Install():
    print("[HashSpray2] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/manesec/HashSpray2.py.git HashSpray2")
    os.chdir("/var/lib/mkt/Tools/Source/Windows/HashSpray2")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/HashSpray2/README.md")):
        import sys
        module_name = "Windows/HashSpray2.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  

def Uninstall():
    print("[HashSpray2] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/HashSpray2")

def Upgrade():
    print("[HashSpray2] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/HashSpray2")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
