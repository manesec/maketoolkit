from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Network Enumeration, SMB Tools, Penetration Testing, File Management

SMBMap is a powerful tool for enumerating Samba share drives across a domain. It simplifies the process of searching for sensitive data, allowing users to list shares, check permissions, upload/download files, and execute remote commands, making it ideal for penetration testing.

- Enumerates Samba share drives across a domain
- Lists share permissions and contents
- Supports file upload, download, and deletion
- Allows remote command execution
- Features pass-the-hash authentication
- Includes distributed file content searching (beta)
- Detects SMB signing and server versions
- Supports Kerberos authentication (beta)
- Provides filename auto-download pattern matching
- User-friendly command-line interface
"""
    print(desc)

def Install():
    print("[SMBMap] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/ShawnDEvans/smbmap.git SMBMap")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/SMBMap/README.md")):
        import sys
        module_name = "Windows/SMBMap.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")      

def Uninstall():
    print("[SMBMap] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/SMBMap")

def Upgrade():
    print("[SMBMap] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/SMBMap")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))