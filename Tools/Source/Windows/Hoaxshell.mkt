from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Reverse Shell, Payload Generator, Windows Exploitation, AV Bypass

HoaxShell is a Python-based tool designed to create and manage reverse shell payloads on Windows systems. It leverages HTTP(S) protocols to establish connections, providing a stealthy way to execute commands remotely. While effective against many AV solutions, it requires obfuscation to evade detection.

- Generates reverse shell payloads using PowerShell
- Supports HTTP and HTTPS protocols
- Allows for custom HTTP headers to avoid detection
- Can create and execute scripts on the victim machine
- Features a grab session mode for re-establishing connections
- Offers constraint language mode support for restricted environments
- Integrates with tunneling tools like Ngrok and LocalTunnel
- Provides payload obfuscation techniques to bypass AV
- Includes options for trusted certificate usage to enhance stealth
- Educational use only; requires explicit permission for testing

"""
    print(desc)
    
def Install():
    print("[hoaxshell] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/")
    os.system("git clone https://github.com/t3l3machus/hoaxshell.git Hoaxshell")
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Hoaxshell")
    os.system("pip3 install -r requirements.txt")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Hoaxshell/README.md")):
        import sys
        module_name = "Windows/Hoaxshell.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")  


def Uninstall():
    print("[hoaxshell] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Hoaxshell")

def Upgrade():
    print("[hoaxshell] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Windows/Hoaxshell")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    os.system("pip3 install -r requirements.txt")
