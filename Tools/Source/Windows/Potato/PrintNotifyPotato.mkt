from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()


def description():
    desc = r"""
Categories: Privilege Escalation, Windows Exploitation, Post-Exploitation

PrintNotifyPotato is a tool designed for privilege escalation on Windows systems by leveraging the PrintNotify COM service. It allows attackers to obtain SYSTEM-level access by exploiting vulnerabilities in the printing subsystem.

- Utilizes PrintNotify COM service for privilege escalation
- Compatible with Windows 10, 11, and Windows Server 2012-2022
- Easy to execute via command line
- Can run arbitrary commands with elevated privileges
- Provides a simple interface for testing and exploitation
- Outputs current user context after escalation
- Supports interactive command execution
- Open-source on GitHub for community contributions
- Demonstrates a common attack vector in Windows environments
- Useful for red team assessments and security research
"""
    print(desc)

def Install():
    print("[PrintNotifyPotato] Downloading base ...")

    from pathlib import Path
    path = Path("/var/lib/mkt/Tools/Source/Windows/Potato/PrintNotifyPotato")
    path.mkdir(parents=True, exist_ok=True)

    UpdateFromGithub()

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Windows/Potato/PrintNotifyPotato/PrintNotifyPotato-NET2.exe")):
        import sys
        module_name = "Windows/Potato/PrintNotifyPotato.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    


def Uninstall():
    import os
    print("[PrintNotifyPotato] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Potato/PrintNotifyPotato")
    os.system("rm -rf /var/lib/mkt/Tools/Version/PrintNotifyPotato*")
     

def Upgrade():
    print("[PrintNotifyPotato] Upgrading ...")
    UpdateFromGithub()
    
def UpdateFromGithub():
    print("[PrintNotifyPotato 1/3] Checking and Upgrading ...")
    Files = [
        ["PrintNotifyPotato-NET2.exe","/var/lib/mkt/Tools/Source/Windows/Potato/PrintNotifyPotato/PrintNotifyPotato-NET2.exe"]
    ]
    Github.UpdateFromGithubReleaseFiles("BeichenDream/PrintNotifyPotato",Files,"PrintNotifyPotato")

    print("[PrintNotifyPotato 2/3] Checking and Upgrading ...")
    Files = [
        ["PrintNotifyPotato-NET35.exe","/var/lib/mkt/Tools/Source/Windows/Potato/PrintNotifyPotato/PrintNotifyPotato-NET35.exe"]
    ]
    Github.UpdateFromGithubReleaseFiles("BeichenDream/PrintNotifyPotato",Files,"PrintNotifyPotato")

    print("[PrintNotifyPotato 3/3] Checking and Upgrading ...")
    Files = [
        ["PrintNotifyPotato-NET46.exe","/var/lib/mkt/Tools/Source/Windows/Potato/PrintNotifyPotato/PrintNotifyPotato-NET46.exe"]
    ]
    Github.UpdateFromGithubReleaseFiles("BeichenDream/PrintNotifyPotato",Files,"PrintNotifyPotato")

    Github.CheckGithubAPIQuta()
