from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()

def Install():
    import os

    print("[Bloodhound] Pre-install neo4j ...")
    os.system("apt update; apt install -y neo4j")

    print("[Bloodhound] Downloading base ...")
    Github.CheckGithubAPIQuta()
    GetListsFromGithub = Github.ReleasesFileGetFromGithubRepo("BloodHoundAD/BloodHound",["BloodHound-linux-x64.zip"])
    GetListsFromGithub = GetListsFromGithub[0]
    
    from pathlib import Path
    path = Path("/tmp/Bloodhound/")
    path.mkdir(parents=True, exist_ok=True)

    Unit.WgetDownloadFile(GetListsFromGithub[3],"/tmp/Bloodhound/main.zip")

    print("[Bloodhound] Installing base ...")
    os.chdir("/tmp/Bloodhound/")
    os.system("unzip main.zip")
    os.system("mv /tmp/Bloodhound/BloodHound-linux-x64 /var/lib/mkt/Tools/Source/Windows/Bloodhound")

    os.chdir("/var/lib/mkt/Tools/Source/Windows")

    save_id = open("/var/lib/mkt/Tools/Version/Bloodhound.gitid","w")
    save_id.write(GetListsFromGithub[2])
    save_id.close()

    os.system("rm -rf /tmp/Bloodhound/")

def Uninstall():
    import os

    print("[Bloodhound] Uninstalling neo4j ...")
    os.system("apt remove -y neo4j")

    print("[Bloodhound] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Windows/Bloodhound")
    os.system("rm -rf /var/lib/mkt/Tools/Version/Bloodhound.gitid")

def Upgrade():
    Github.CheckGithubAPIQuta()

    GetListsFromGithub = Github.ReleasesFileGetFromGithubRepo("BloodHoundAD/BloodHound",["BloodHound-linux-x64.zip"])
    GetListsFromGithub = GetListsFromGithub[0]

    save_id = open("/var/lib/mkt/Tools/Version/Bloodhound.gitid","r")
    localid = save_id.read().strip()
    save_id.close()
    
    if (GetListsFromGithub[2] != localid):
        print("[!] Bloodhound need to update, Updating ...")
        Uninstall()
        Install()
    else:
        print("[!] Already up to date.")