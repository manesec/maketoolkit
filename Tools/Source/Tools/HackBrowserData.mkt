from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()

def Install():
    print("[HackBrowserData] Downloading base ...")

    from pathlib import Path
    path = Path("/var/lib/mkt/Tools/Source/Tools/HackBrowserData/")
    path.mkdir(parents=True, exist_ok=True)

    UpdateFromGithub()

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/HackBrowserData/")
    os.system("unzip \*.zip")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/HackBrowserData/*.zip")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/HackBrowserData/hack-browser-data-linux-386")):
        import sys
        module_name = "Tools/HackBrowserData.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    

def Uninstall():
    import os
    print("[HackBrowserData] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/HackBrowserData")
    os.system("rm -rf /var/lib/mkt/Tools/Version/HackBrowserData_*")

def Upgrade():
    print("[HackBrowserData] Upgrading ...")
    UpdateFromGithub()
    
def UpdateFromGithub():
    Files = [
        ["hack-browser-data-linux-386.zip","/var/lib/mkt/Tools/Source/Tools/HackBrowserData/hack-browser-data-linux-386.zip"],
        ["hack-browser-data-linux-amd64.zip","/var/lib/mkt/Tools/Source/Tools/HackBrowserData/hack-browser-data-linux-amd64.zip"],
        ["hack-browser-data-windows-32bit.zip","/var/lib/mkt/Tools/Source/Tools/HackBrowserData/hack-browser-data-windows-32bit.zip"],
        ["hack-browser-data-windows-64bit.zip","/var/lib/mkt/Tools/Source/Tools/HackBrowserData/hack-browser-data-windows-64bit.zip"]
    ]
    Github.UpdateFromGithubReleaseFiles("moonD4rk/HackBrowserData",Files,sign_prefix="HackBrowserData_")
    Github.CheckGithubAPIQuta()