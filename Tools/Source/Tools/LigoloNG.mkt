from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()

def description():
    desc = r"""
Categories: Tunneling, VPN, Penetration Testing, Networking

Ligolo-ng is a lightweight tunneling tool that enables penetration testers to create secure tunnels using TUN interfaces, eliminating the need for SOCKS proxies. It supports multiple platforms and offers automatic certificate configuration, making it easy to set up and use.

- Lightweight and fast tunneling tool
- Utilizes TUN interfaces instead of SOCKS
- No administrative access required on the agent side
- Automatic Let's Encrypt certificate configuration
- Supports TCP, UDP, and ICMP protocols
- High performance with multiplexing capabilities
- Handles multiple tunnels simultaneously
- Websocket support for enhanced connectivity
- Automatic recovery from network issues
- Simple UI for agent selection and network info

"""
    print(desc)

def Install():
    print("[LigoloNG] Downloading base ...")

    from pathlib import Path
    path = Path("/var/lib/mkt/Tools/Source/Tools/LigoloNG")
    path.mkdir(parents=True, exist_ok=True)

    UpdateFromGithub()


    unzipFileList = [
        ["(.){0,}proxy.exe","/var/lib/mkt/Tools/Source/Tools/LigoloNG/proxy.exe"]
    ]
    Unit.extractZipFileAndDelete("/var/lib/mkt/Tools/Source/Tools/LigoloNG/Proxy_Windows_x64.zip",unzipFileList)

    unzipFileList = [
        ["(.){0,}agent.exe","/var/lib/mkt/Tools/Source/Tools/LigoloNG/agent.exe"]
    ]
    Unit.extractZipFileAndDelete("/var/lib/mkt/Tools/Source/Tools/LigoloNG/Agent_Windows_x64.zip",unzipFileList)

    unzipFileList = [
        ["(.){0,}agent","/var/lib/mkt/Tools/Source/Tools/LigoloNG/agent"]
    ]
    Unit.extractGZFileAndDelete("/var/lib/mkt/Tools/Source/Tools/LigoloNG/Agent_Linux_x64.tar.gz",unzipFileList)

    unzipFileList = [
        ["(.){0,}proxy","/var/lib/mkt/Tools/Source/Tools/LigoloNG/proxy"]
    ]
    Unit.extractGZFileAndDelete("/var/lib/mkt/Tools/Source/Tools/LigoloNG/Proxy_Linux_x64.tar.gz",unzipFileList)

    print("OK")


def Uninstall():
    import os
    print("[LigoloNG] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/LigoloNG")
    os.system("rm -rf /var/lib/mkt/Tools/Version/LigoloNG_*")
    

def Upgrade():
    print("[LigoloNG] Upgrading ...")
    UpdateFromGithub()
    
def UpdateFromGithub():
    Files = [
        ["(.){0,}_proxy_(.){0,}_windows_amd64.zip","/var/lib/mkt/Tools/Source/Tools/LigoloNG/Proxy_Windows_x64.zip"],
        ["(.){0,}_agent_(.){0,}_windows_amd64.zip","/var/lib/mkt/Tools/Source/Tools/LigoloNG/Agent_Windows_x64.zip"],

        ["(.){0,}_proxy_(.){0,}_linux_amd64.tar.gz","/var/lib/mkt/Tools/Source/Tools/LigoloNG/Proxy_Linux_x64.tar.gz"],
        ["(.){0,}_agent_(.){0,}_linux_amd64.tar.gz","/var/lib/mkt/Tools/Source/Tools/LigoloNG/Agent_Linux_x64.tar.gz"],

    ]
    Github.UpdateFromGithubReleaseFiles("nicocha30/ligolo-ng",Files,sign_prefix="LigoloNG_")
    Github.CheckGithubAPIQuta()