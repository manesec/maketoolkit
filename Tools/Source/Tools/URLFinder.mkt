from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()

def description():
    desc = r"""
Categories: Information Gathering, Web Scraping, Security Testing

URLFinder is a fast, comprehensive, and easy-to-use tool for extracting page information. It analyzes JavaScript and URLs to uncover sensitive information or unauthorized API endpoints hidden within webpages.

- Supports both single and batch URL processing.
- Displays various HTTP status codes.
- Customizable user-agent headers.
- Allows deep and secure crawling modes.
- Exports results to CSV, JSON, or HTML formats.
- Supports proxy settings for requests.
- Can perform fuzz testing on 404 links.
- Offers a YAML configuration file for custom settings.
- Allows specification of maximum crawling depth and timeout.
- Regular expression support for domain filtering.


"""
    print(desc)

def Install():
    print("[URLFinder] Downloading base ...")

    # mkdir 
    from pathlib import Path

    path = Path("/tmp/mktools")
    path.mkdir(parents=True, exist_ok=True)

    # download
    UpdateFromGithub()

    import os
    os.chdir("/tmp/mktools/")
    os.system("tar -xf /tmp/mktools/URLFinder.tar.gz")
    os.system("mv URLFinder /var/lib/mkt/Tools/Source/Tools/URLFinder")
    
    os.chdir("/var/lib/mkt/Tools/")
    os.system("rm -rf /tmp/mktools/")
    
    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/URLFinder")):
        import sys
        module_name = "Tools/URLFinder.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")


def Uninstall():
    import os
    print("[URLFinder] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/URLFinder")
    os.system("rm -rf /var/lib/mkt/Tools/Version/URLFinder*")

def Upgrade():
    print("[URLFinder] Upgrading ...")
    UpdateFromGithub()

    
def UpdateFromGithub():
    Files = [
        ["URLFinder_Linux_x86_64.tar.gz","/tmp/mktools/URLFinder.tar.gz"],
    ]
    Github.UpdateFromGithubReleaseFiles("pingc0y/URLFinder",Files,sign_prefix="URLFinder")
    Github.CheckGithubAPIQuta()
