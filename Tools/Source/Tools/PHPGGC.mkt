from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Exploitation, PHP, Payload Generation, Security Testing

PHPGGC is a powerful tool for generating unserialize() payloads in PHP applications. It simplifies the process of creating exploit payloads for various PHP frameworks, allowing security researchers to test for vulnerabilities without extensive manual effort.

- Generates payloads for multiple PHP frameworks
- Supports various gadget chains (e.g., Laravel, Symfony)
- Allows testing of payloads against specific versions
- Can create PHAR files for advanced exploitation
- Offers encoding options (URL, Base64)
- Includes wrapper functionality for custom processing
- Implements fast destruct for reliability
- Can be run via CLI or used programmatically
- Docker support for easy setup
- Active community contributions and updates

"""
    print(desc)

def Install():
    print("[PHPGGC] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/")
    os.system("git clone https://github.com/ambionics/phpggc PHPGGC")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/PHPGGC/README.md")):
        import sys
        module_name = "Tools/PHPGGC.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")

def Uninstall():
    print("[PHPGGC] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/PHPGGC")

def Upgrade():
    print("[PHPGGC] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/PHPGGC")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
