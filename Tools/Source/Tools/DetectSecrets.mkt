from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Code Security, Secret Detection, DevOps, Compliance

detect-secrets is a tool designed to identify and manage sensitive information in codebases, preventing the introduction of new secrets while allowing for the auditing of existing ones. It uses regex patterns to scan for potential secrets and helps maintain a secure coding environment.

- Prevents new secrets from entering codebases
- Audits existing secrets for compliance
- Supports multiple plugins for various secret types
- Allows inline allowlisting for false positives
- Generates baseline files for tracking secrets
- Can be integrated as a pre-commit hook
- Provides customizable scanning options
- Supports scanning non-git tracked files
- Outputs results in JSON format for easy parsing
- Offers extensive documentation for user guidance

"""
    print(desc)

def Install():
    print("[DetectSecrets] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/")
    os.system("git clone https://github.com/Yelp/detect-secrets.git DetectSecrets")
    os.chdir("/var/lib/mkt/Tools/Source/Tools/DetectSecrets")
    os.system("python3 setup.py install")
    print("To run: $ detect-secrets -h")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/DetectSecrets/README.md")):
        import sys
        module_name = "Tools/DetectSecrets.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")    



def Uninstall():
    print("[DetectSecrets] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/DetectSecrets")

def Upgrade():
    print("[DetectSecrets] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/DetectSecrets")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))

    os.system("python3 setup.py install")