from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: File Management, Command Line Tools, Text Processing, Networking

Swiss File Knife (SFK) is a versatile command line tool that combines multiple functionalities into a single portable executable. Ideal for users on the go, it allows for file manipulation, text searching, and even serves as a lightweight FTP/HTTP serverâ€”all without installation.

- Multi-functional command line tool
- Portable and lightweight for USB use
- Supports text file searching and conversion
- Instant FTP/HTTP server capabilities
- Duplicate file finder and folder comparison
- Tree size analysis for directories
- Execute custom commands on multiple files
- Available for Windows, Linux, and Mac
- Easy command syntax for quick operations
- Free to use under the BSD License

"""
    print(desc)

def Install():
    print("[SFK] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/")
    os.system("git clone https://github.com/manesec/Backup-sfk.git SFK")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/SFK/README.md")):
        import sys
        module_name = "Tools/SFK.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")

def Uninstall():
    print("[SFK] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/SFK")

def Upgrade():
    print("[SFK] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/SFK")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
