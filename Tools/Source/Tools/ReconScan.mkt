from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Network Reconnaissance, Vulnerability Analysis, Penetration Testing

ReconScan is a powerful Python tool designed for network reconnaissance and vulnerability analysis, ideal for penetration testing workflows. It automates the scanning of services and identifies known vulnerabilities, providing a comprehensive view of potential security issues.

- Automates service enumeration using nmap and other tools
- Supports TCP/UDP port scanning
- Performs vulnerability analysis based on CPE names
- Generates organized output for easy review
- Integrates multiple open-source tools for enhanced results
- Designed for use in CTFs and real-world scenarios
- Capable of running scans in parallel
- Provides links to public exploits for identified vulnerabilities
- User-friendly command-line interface
- Open-source and actively maintained
"""
    print(desc)

def Install():
    print("[ReconScan] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/")
    os.system("git clone https://github.com/RoliSoft/ReconScan.git ReconScan")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/ReconScan/recon.py")):
        import sys
        module_name = "Tools/ReconScan.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")

def Uninstall():
    print("[ReconScan] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/ReconScan")

def Upgrade():
    print("[ReconScan] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/ReconScan")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
