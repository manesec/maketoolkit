from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()


def description():
    desc = r"""
Categories: LDAP Tools, Directory Browsers, Schema Editors, Multi-Platform Applications

Apache Directory Studio is a versatile LDAP browser and directory client designed primarily for managing ApacheDS but compatible with any LDAP server. It offers a comprehensive suite of tools for browsing, editing, and configuring directory services efficiently.

- LDAP Browser for tree visualization and entry management
- LDIF Editor with syntax highlighting for easy file editing
- Schema Editor for managing attribute types and object classes
- Embedded ApacheDS for quick server setup
- Configuration Editor for server configuration files
- ACI Editor for defining access control information
- Multi-language support including English, French, and German
- Eclipse-based for easy plugin integration and upgrades
- Cross-platform compatibility (macOS, Linux, Windows)
- Community-driven with volunteer language support options
"""
    print(desc)


def Install():
    try:
        print("[ApacheDirectoryStudio] Installing base ...")
        import os,sys

        from lxml import html
        import requests
        print(" *  Getting Directory Path ...")
        req = requests.get("https://dlcdn.apache.org/directory/studio/").text
        webpage = html.fromstring(req)
        href = webpage.xpath('//a/@href')
        print(" >  Entering %s ..." %(href[-1]))
        dir = "https://dlcdn.apache.org/directory/studio/" + href[-1]

        req = requests.get(dir).text
        webpage = html.fromstring(req)
        href = webpage.xpath('//a/@href')

        getlink = ""
        for link in href:
            find_end = "linux.gtk.x86_64.tar.gz"
            if (link[-(len(find_end)):] == find_end):
                getlink = link
                print(" >  " + link)

        if (getlink == ""):
            print("[E] No such file!")
            sys.exit(0)

        from pathlib import Path
        path = Path("/tmp/mktools")
        path.mkdir(exist_ok=True,parents=True)

        print(" *  Starting Download files ...")
        dir = dir + getlink

        os.chdir("/tmp/mktools")
        os.system("wget '%s' -O /tmp/mktools/linux.tar.gz" % dir)
        os.system("tar -xf linux.tar.gz")
        os.system("mv ApacheDirectoryStudio /var/lib/mkt/Tools/Source/Tools/ApacheDirectoryStudio")
        os.chdir("/tmp")
        os.system("rm -rf /tmp/mktools")
    
    except:
        print("[ERROR]")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/ApacheDirectoryStudio/ApacheDirectoryStudio")):
        import sys
        module_name = "Tools/ApacheDirectoryStudio.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")


def Uninstall():
    print("[ApacheDirectoryStudio] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/ApacheDirectoryStudio")

def Upgrade():
    print("[ApacheDirectoryStudio] This tools not support update,but you can uninstall and install it again.")