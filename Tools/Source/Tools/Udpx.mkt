from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()
Github = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_github.py").load_module()

def description():
    desc = r"""
Categories: Network Scanning, UDP Scanning, Port Scanning, Service Discovery

UDPX is a fast and lightweight single-packet UDP scanner written in Go. It supports the discovery of over 45 services and allows for custom probes. Designed for portability, it works on Linux, Mac OS, and Windows, making it an ideal tool for quick network assessments.

- Fast scanning of /16 networks in ~20 seconds
- Supports over 45 predefined services
- Customizable with user-defined probes
- No dependencies required (no libpcap)
- Outputs results in JSONL format
- Scans IPs, CIDRs, and domain names
- Adjustable concurrency settings
- Configurable timeout for responses
- Easy to build and deploy from source
- Open-source under MIT License

"""
    print(desc)

def Install():
    print("[Udpx] Downloading base ...")

    from pathlib import Path
    path = Path("/var/lib/mkt/Tools/Source/Tools/Udpx")
    path.mkdir(parents=True, exist_ok=True)

    UpdateFromGithub()

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/Udpx/")

    Unit.extractZipFileAndDelete("/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-linux-386.zip",[["udpx(.){0,}","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx"]])
    Unit.extractZipFileAndDelete("/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-linux-amd64.zip",[["udpx(.){0,}","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx64"]])
    Unit.extractZipFileAndDelete("/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-windows-386.zip",[["udpx(.){0,}","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx.exe"]])
    Unit.extractZipFileAndDelete("/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-windows-amd64.zip",[["udpx(.){0,}","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx64.exe"]])

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/Udpx/udpx64")):
        import sys
        module_name = "Tools/Udpx.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")


def Uninstall():
    import os
    print("[Udpx] Uninstalling ...")
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/Udpx")
    os.system("rm -rf /var/lib/mkt/Tools/Version/Udpx_*")
    

def Upgrade():
    print("[Udpx] Upgrading ...")
    UpdateFromGithub()
    
def UpdateFromGithub():
    Files = [
        ["udpx-linux-386.zip","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-linux-386.zip"],
        ["udpx-linux-amd64.zip","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-linux-amd64.zip"],
        ["udpx-windows-386.zip","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-windows-386.zip"],
        ["udpx-windows-amd64.zip","/var/lib/mkt/Tools/Source/Tools/Udpx/udpx-windows-amd64.zip"]
    ]
    Github.UpdateFromGithubReleaseFiles("nullt3r/udpx",Files,sign_prefix="Udpx_")
    Github.CheckGithubAPIQuta()