from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: URL Filtering, Security Testing, Web Scraping

uro is a tool designed to streamline the process of URL filtering for security testing by removing uninteresting or duplicate content without making HTTP requests. It helps security professionals focus on relevant URLs, enhancing efficiency in testing workflows.

- Removes incremental URLs like /page/1/ and /page/2/
- Filters out blog posts and human-written content
- Eliminates duplicate parameter URLs, e.g., /page.php?id=1 and /page.php?id=2
- Excludes images, JS, CSS, and other non-relevant files
- Supports whitelisting and blacklisting of URL extensions
- Allows reading from and writing to files
- Offers granular control with various filters
- Easy integration into existing workflows via stdin
- Lightweight and efficient with no HTTP requests
- Customizable to fit specific testing needs
"""
    print(desc)

def Install():
    print("[URO] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/")
    os.system("git clone https://github.com/s0md3v/uro.git URO")
    os.chdir("/var/lib/mkt/Tools/Source/Tools/URO")
    os.system("python3 setup.py install")


    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/URO/setup.py")):
        import sys
        module_name = "Tools/URO.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    print("OK")




def Uninstall():
    print("[URO] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/URO")

def Upgrade():
    print("[URO] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/URO")
    
    Branches = "main"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
    os.system("python3 setup.py install")
