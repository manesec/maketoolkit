from importlib.machinery import SourceFileLoader
Unit = SourceFileLoader("manesec_github","/var/lib/mkt/Bin/module_unit.py").load_module()

def description():
    desc = r"""
Categories: Vulnerability Scanning, Web Application Security, Joomla Tools, Python Tools

Juumla is a Python-based tool designed to identify Joomla versions, scan for vulnerabilities, and locate sensitive files within Joomla installations.

- Identifies Joomla version quickly
- Scans for known vulnerabilities
- Locates sensitive configuration files
- Low resource consumption
- Open-source and community-driven
- Easy installation via Git and pip
- Supports Docker for containerized environments
- Regular updates planned for vulnerability database
- Contributing guidelines available
- Warning against malicious use


"""
    print(desc)

def Install():
    print("[Juumla] Installing base ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/")
    os.system("git clone https://github.com/oppsec/juumla.git Juumla")

    # check if installed 
    import os
    if not (os.path.exists("/var/lib/mkt/Tools/Source/Tools/Juumla/README.md")):
        import sys
        module_name = "Tools/Juumla.mkt"
        print("[ERROR]: Failed to install " + module_name +" ...")
        Unit.RollBack(module_name)
        sys.exit(1)

    os.chdir("/var/lib/mkt/Tools/Source/Tools/Juumla/")
    os.system("pip3 install -r requirements.txt")

    print("OK")

def Uninstall():
    print("[Juumla] Uninstalling ...")

    import os
    os.system("rm -rf /var/lib/mkt/Tools/Source/Tools/Juumla")

def Upgrade():
    print("[Juumla] Upgrading ...")

    import os
    os.chdir("/var/lib/mkt/Tools/Source/Tools/Juumla")
    
    Branches = "master"
    os.system("git pull origin %s || (git stash drop && git pull origin %s )" % (Branches,Branches))
